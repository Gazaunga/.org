#+TITLE:  Gsettings configuration
#+AUTHOR: Jeremy Ottley
#+EMAIL:  jeremy.ottley@gmail.com
#+DATE:   2018 Oct 30
#+TAGS:   gnome gsettings keybinding
#+PROPERTY: header-args:sh :results silent :tangle no

* Gsettings

Adding shortcut keybindings in two steps from the command line (14.04+)

Adding custom shortcuts from the command line can be done, but is a bit complicated; it needs to be done in a few steps per keybinding. On the other hand, it is pretty straightforward and can very well be scripted if you somehow want to do it from the command line (that was the question, right?).

Just like in your interface (System Settings > "Keyboard" > "Shortcuts" > "Custom Shortcuts"), Custom keyboard shortcuts are made from command line in two steps:

create the keybinding by editing (adding to-) the list that is returned by the command:
#+begin_src sh
gsettings get org.gnome.settings-daemon.plugins.media-keys custom-keybindings
#+end_src
The returned list looks like (if it were only one shortcut currently):
#+begin_src sh
['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']
#+end_src
Apply the edited list by the command:
#+begin_src sh
gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "[<altered_list>]"
(mind the double quotes)
#+end_src
N.B. No need to say that the mention in the list (e.g. custom1, custom2) should be a unique one. If you script it, the script should prevent duplicates. In this case the edited list should look like e.g.:
#+begin_src sh
['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/']
#+end_src
to add one keybinding: custom1
set its properties:
name:
#+begin_src sh
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ name '<newname>'
#+end_src
command:
#+begin_src sh
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ command '<newcommand>'
#+end_src
Key combination (for example <Primary><Alt>g):
#+begin_src sh
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/ binding '<key_combination>'
#+end_src
Useful information can be found [[https://wiki.ubuntu.com/Keybindings][here]]

Example script to set a new custom shortcut

The script below can be used to set a new shortcut key combination from the command line. It can be used with the command (assuming the key combination is available):
#+begin_src sh
python3 /path/to/script.py '<name>' '<command>' '<key_combination>'
#+end_src
An example:

To set a shortcut key combination to open gedit with the key combination Alt+7:
#+begin_src sh
python3 /path/to/script.py 'open gedit' 'gedit' '<Alt>7'
#+end_src

The script:

#+begin_src python
#!/usr/bin/env python3
import subprocess
import sys

# defining keys & strings to be used
key = "org.gnome.settings-daemon.plugins.media-keys custom-keybindings"
subkey1 = key.replace(" ", ".")[:-1]+":"
item_s = "/"+key.replace(" ", "/").replace(".", "/")+"/"
firstname = "custom"
# get the current list of custom shortcuts
get = lambda cmd: subprocess.check_output(["/bin/bash", "-c", cmd]).decode("utf-8")
array_str = get("gsettings get "+key)
# in case the array was empty, remove the annotation hints
command_result = array_str.lstrip("@as")
current = eval(command_result)
# make sure the additional keybinding mention is no duplicate
n = 1
while True:
    new = item_s+firstname+str(n)+"/"
    if new in current:
        n = n+1
    else:
        break
# add the new keybinding to the list
current.append(new)
# create the shortcut, set the name, command and shortcut key
cmd0 = 'gsettings set '+key+' "'+str(current)+'"'
cmd1 = 'gsettings set '+subkey1+new+" name '"+sys.argv[1]+"'"
cmd2 = 'gsettings set '+subkey1+new+" command '"+sys.argv[2]+"'"
cmd3 = 'gsettings set '+subkey1+new+" binding '"+sys.argv[3]+"'"

for cmd in [cmd0, cmd1, cmd2, cmd3]:
    subprocess.call(["/bin/bash", "-c", cmd])
#+end_src
    
How to use:

Paste the script into an empty file, save it as set_customshortcut.py, run it as explained above.

Some of the mostly used key mentions (found experimentally, looking into the changes the GUI way made into the binding value):

#+begin_src sh
Super key:                 <Super>
Control key:               <Primary> or <Control>
Alt key:                   <Alt>
Shift key:                 <Shift>
numbers:                   1 (just the number)
Spacebar:                  space
Slash key:                 slash
Asterisk key:              asterisk (so it would need `<Shift>` as well)
Ampersand key:             ampersand (so it would need <Shift> as well)

a few numpad keys:
Numpad divide key (`/`):   KP_Divide
Numpad multiply (Asterisk):KP_Multiply
Numpad number key(s):      KP_1
Numpad `-`:                KP_Subtract
#+end_src

#+DESCRIPTION: A literate programming version of my Gsettings

#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
